# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python release

on:
  push:
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        choco install make nasm zip --no-progress
        python -m pip install --upgrade pip
        python -m pip install pyinstaller
        python -m pip install pygame
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: build app
      run: |
        pyinstaller -w qtextbrowser_advanced.py
    - name: colleting files
      run: |
        mkdir Super_Mario_Bors.1_test
        mv dist/Super_Mario_Bros.1.exe Super_Mario_Bors.1_test
        mv data Super_Mario_Bors.1_test
        mv scripts Super_Mario_Bors.1_test
        zip -r Super_Mario_Bors.1_test_for_windows.zip Super_Mario_Bors.1_test/*
    - name: Upload to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Super_Mario_Bors.1_windows_build
        path: Super_Mario_Bors.1_test_for_windows.zip
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Super_Mario_Bors.1_test_for_windows.zip
          tag: ${{ github.ref }}
          asset_name: Super_Mario_Bors.1_$tag_for_Windows.zip
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller
        python -m pip install pygame
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: build app
      run: |
        pyinstaller -w qtextbrowser_advanced.py
    - name: colleting files
      run: |
        mkdir Super_Mario_Bors.1_test
        mv dist/Super_Mario_Bros.1.exe Super_Mario_Bors.1_test
        mv data Super_Mario_Bors.1_test
        mv scripts Super_Mario_Bors.1_test
        zip -r Super_Mario_Bors.1_test_for_macOS_and_linux.zip Super_Mario_Bors.1_test/*
    - name: Upload to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Super_Mario_Bors.1_ubuntu_build
        path: Super_Mario_Bors.1_test_for_macOS_and_linux.zip
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Super_Mario_Bors.1_test_for_macOS_and_linux.zip
          tag: ${{ github.ref }}
          asset_name: Super_Mario_Bors.1_$tag_for_macOS_and_linux.zip
